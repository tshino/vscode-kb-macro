{
    "name": "kb-macro",
    "displayName": "Keyboard Macro Beta",
    "description": "Recordable keyboard macro for Visual Studio Code",
    "version": "0.4.0",
    "publisher": "tshino",
    "engines": {
        "vscode": "^1.63.0"
    },
    "categories": [
        "Keymaps"
    ],
    "icon": "images/kb-macro-icon.png",
    "keywords": [
        "keyboard macro",
        "macro",
        "macro recording",
        "recordable macro"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/tshino/vscode-kb-macro.git"
    },
    "activationEvents": [
        "onCommand:kb-macro.startRecording",
        "onCommand:kb-macro.cancelRecording",
        "onCommand:kb-macro.playback",
        "onCommand:kb-macro.wrap"
    ],
    "main": "./src/extension.js",
    "scripts": {
        "lint": "eslint .",
        "-pretest": "npm run lint",
        "test": "node ./test/runTest.js",
        "gen-wrapper": "node ./generator/gen_wrapper.js",
        "postgen-wrapper": "npm run verify-wrapper",
        "verify-wrapper": "node ./generator/verify_wrapper.js",
        "update-keymap-wrapper": "./generator/update_keymap_wrapper.sh"
    },
    "devDependencies": {
        "ansi-regex": ">=6.0.1",
        "eslint": "^8.4.1",
        "glob": "^7.2.0",
        "json": "^11.0.0",
        "mocha": "^9.1.3",
        "vscode-test": "^1.6.1"
    },
    "contributes": {
        "configuration": {
            "title": "Keyboard Macro",
            "properties": {
                "keyboardMacro.recordingShortcuts": {
                    "type": "string",
                    "default": "Option1",
                    "enum": [
                        "Option1",
                        "Option2",
                        "None"
                    ],
                    "markdownEnumDescriptions": [
                        "**Ctrl+Alt+R** for Start/Stop Recording and **Ctrl+Alt+P** for Playback",
                        "**Ctrl+Shift+Alt+R** for Start/Stop Recording and **Ctrl+Shift+Alt+P** for Playback",
                        "No keybindings. In this case, you have to define your own keys in keybindings.json."
                    ]
                }
            }
        },
        "commands": [
            {
                "command": "kb-macro.startRecording",
                "title": "Keyboard Macro: Start Recording"
            },
            {
                "command": "kb-macro.finishRecording",
                "title": "Keyboard Macro: Finish Recording"
            },
            {
                "command": "kb-macro.cancelRecording",
                "title": "Keyboard Macro: Cancel Recording"
            },
            {
                "command": "kb-macro.playback",
                "title": "Keyboard Macro: Playback"
            }
        ],
        "keybindings": [
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "type",
                    "args": {
                        "text": "\n"
                    }
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly && !suggestWidgetVisible && !renameInputVisible"
            },
            {
                "key": "escape escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.exitZenMode"
                },
                "when": "kb-macro.recording && inZenMode"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeReferenceSearch"
                },
                "when": "kb-macro.recording && inReferenceSearchEditor && !config.editor.stablePeek"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cancelSelection"
                },
                "when": "kb-macro.recording && editorHasSelection && textInputFocus"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "removeSecondaryCursors"
                },
                "when": "kb-macro.recording && editorHasMultipleSelections && textInputFocus"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeBreakpointWidget"
                },
                "when": "kb-macro.recording && breakpointWidgetVisible && textInputFocus"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.hideComment"
                },
                "when": "kb-macro.recording && commentEditorFocused"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeFindWidget"
                },
                "when": "kb-macro.recording && editorFocus && findWidgetVisible && !isComposing"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "leaveSnippet"
                },
                "when": "kb-macro.recording && editorTextFocus && inSnippetMode"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeDirtyDiff"
                },
                "when": "kb-macro.recording && dirtyDiffVisible"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeMarkersNavigation"
                },
                "when": "kb-macro.recording && editorFocus && markersNavigationVisible"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeParameterHints"
                },
                "when": "kb-macro.recording && editorFocus && parameterHintsVisible"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "hideSuggestWidget"
                },
                "when": "kb-macro.recording && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cancelLinkedEditingInput"
                },
                "when": "kb-macro.recording && LinkedEditingInputVisible && editorTextFocus"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cancelRenameInput"
                },
                "when": "kb-macro.recording && editorFocus && renameInputVisible"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeAccessibilityHelp"
                },
                "when": "kb-macro.recording && accessibilityHelpWidgetVisible && editorFocus"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.closeQuickOpen"
                },
                "when": "kb-macro.recording && inQuickOpen"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.hideFind"
                },
                "when": "kb-macro.recording && terminalFindVisible && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "shift+escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeReferenceSearch"
                },
                "when": "kb-macro.recording && referenceSearchVisible && !config.editor.stablePeek"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeReferenceSearch"
                },
                "when": "kb-macro.recording && inReferenceSearchEditor && !config.editor.stablePeek"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.closeTestPeek"
                },
                "when": "kb-macro.recording && testing.isInPeek && !config.editor.stablePeek || kb-macro.recording && testing.isPeekVisible && !config.editor.stablePeek"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cancelSelection"
                },
                "when": "kb-macro.recording && editorHasSelection && textInputFocus"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "removeSecondaryCursors"
                },
                "when": "kb-macro.recording && editorHasMultipleSelections && textInputFocus"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.quitEdit"
                },
                "when": "kb-macro.recording && inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeBreakpointWidget"
                },
                "when": "kb-macro.recording && breakpointWidgetVisible && textInputFocus"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.cancelSelectionAnchor"
                },
                "when": "kb-macro.recording && editorTextFocus && selectionAnchorSet"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.inlineSuggest.hide"
                },
                "when": "kb-macro.recording && inlineSuggestionVisible"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.webvieweditor.hideFind"
                },
                "when": "kb-macro.recording && webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.cancelOperation"
                },
                "when": "kb-macro.recording && cancellableOperation"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.debug.action.closeExceptionWidget"
                },
                "when": "kb-macro.recording && exceptionWidgetVisible"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.gotoNextSymbolFromResult.cancel"
                },
                "when": "kb-macro.recording && hasSymbols"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.focusQueryEditorWidget"
                },
                "when": "kb-macro.recording && inSearchEditor"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "settings.action.clearSearchResults"
                },
                "when": "kb-macro.recording && inSettingsEditor && inSettingsSearch"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "welcome.goBack"
                },
                "when": "kb-macro.recording && inWelcome && activeEditor == 'gettingStartedPage'"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.hideComment"
                },
                "when": "kb-macro.recording && commentEditorFocused"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeFindWidget"
                },
                "when": "kb-macro.recording && editorFocus && findWidgetVisible && !isComposing"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "leaveEditorMessage"
                },
                "when": "kb-macro.recording && messageVisible"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "leaveSnippet"
                },
                "when": "kb-macro.recording && editorTextFocus && inSnippetMode"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeDirtyDiff"
                },
                "when": "kb-macro.recording && dirtyDiffVisible"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeMarkersNavigation"
                },
                "when": "kb-macro.recording && editorFocus && markersNavigationVisible"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notifications.hideToasts"
                },
                "when": "kb-macro.recording && notificationToastsVisible"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeParameterHints"
                },
                "when": "kb-macro.recording && editorFocus && parameterHintsVisible"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "hideSuggestWidget"
                },
                "when": "kb-macro.recording && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cancelLinkedEditingInput"
                },
                "when": "kb-macro.recording && LinkedEditingInputVisible && editorTextFocus"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cancelRenameInput"
                },
                "when": "kb-macro.recording && editorFocus && renameInputVisible"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeAccessibilityHelp"
                },
                "when": "kb-macro.recording && accessibilityHelpWidgetVisible && editorFocus"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeReplaceInFilesWidget"
                },
                "when": "kb-macro.recording && replaceInputBoxFocus && searchViewletVisible"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "keybindings.editor.clearSearchResults"
                },
                "when": "kb-macro.recording && inKeybindings && inKeybindingsSearch"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.clear"
                },
                "when": "kb-macro.recording && listFocus && listHasSelectionOrFocus && !inputFocus"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.hideFind"
                },
                "when": "kb-macro.recording && notebookEditorFocused && notebookFindWidgetFocused"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.cancel"
                },
                "when": "kb-macro.recording && listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "settings.action.focusLevelUp"
                },
                "when": "kb-macro.recording && inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.closeQuickOpen"
                },
                "when": "kb-macro.recording && inQuickOpen"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.hideInterfaceOverview"
                },
                "when": "kb-macro.recording && interfaceOverviewVisible"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.clearSelection"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.hideFind"
                },
                "when": "kb-macro.recording && terminalFindVisible && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.navigationModeExit"
                },
                "when": "kb-macro.recording && accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.banner.focusBanner"
                },
                "when": "kb-macro.recording && bannerFocused"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.statusBar.clearFocus"
                },
                "when": "kb-macro.recording && statusBarFocused"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breadcrumbs.selectEditor"
                },
                "when": "kb-macro.recording && breadcrumbsActive && breadcrumbsVisible"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.closeCallHierarchy"
                },
                "when": "kb-macro.recording && callHierarchyVisible && !config.editor.stablePeek"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.closeTypeHierarchy"
                },
                "when": "kb-macro.recording && typeHierarchyVisible && !config.editor.stablePeek"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "filesExplorer.cancelCut"
                },
                "when": "kb-macro.recording && explorerResourceCut && explorerViewletVisible && filesExplorerFocus && !inputFocus"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "closeReferenceSearch"
                },
                "when": "kb-macro.recording && referenceSearchVisible && !config.editor.stablePeek"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notifications.hideList"
                },
                "when": "kb-macro.recording && notificationCenterVisible"
            },
            {
                "key": "escape",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notifications.hideToasts"
                },
                "when": "kb-macro.recording && notificationFocus && notificationToastsVisible"
            },
            {
                "key": "ctrl+end",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorBottom"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "ctrl+end",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.focusBottom"
                },
                "when": "kb-macro.recording && notebookEditorFocused && !inputFocus"
            },
            {
                "key": "ctrl+end",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.scrollToBottom"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
            },
            {
                "key": "ctrl+shift+end",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorBottomSelect"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "ctrl+shift+alt+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorColumnSelectDown"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "ctrl+shift+alt+left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorColumnSelectLeft"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "ctrl+shift+alt+pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorColumnSelectPageDown"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "ctrl+shift+alt+pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorColumnSelectPageUp"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "ctrl+shift+alt+right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorColumnSelectRight"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "ctrl+shift+alt+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorColumnSelectUp"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorDown"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.focusNextEditor"
                },
                "when": "kb-macro.recording && config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
            },
            {
                "key": "down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "settings.action.focusSettingsFile"
                },
                "when": "kb-macro.recording && inSettingsSearch && !suggestWidgetVisible"
            },
            {
                "key": "down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "showNextParameterHint"
                },
                "when": "kb-macro.recording && editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
            },
            {
                "key": "down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "selectNextSuggestion"
                },
                "when": "kb-macro.recording && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breadcrumbs.selectFocused"
                },
                "when": "kb-macro.recording && breadcrumbsActive && breadcrumbsVisible"
            },
            {
                "key": "down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "history.showNext"
                },
                "when": "kb-macro.recording && historyNavigationForwardsEnabled && historyNavigationWidget && !suggestWidgetVisible"
            },
            {
                "key": "down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "interactive.history.next"
                },
                "when": "kb-macro.recording && !suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
            },
            {
                "key": "down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.focusDown"
                },
                "when": "kb-macro.recording && listFocus && !inputFocus"
            },
            {
                "key": "down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notifications.focusNextToast"
                },
                "when": "kb-macro.recording && notificationFocus && notificationToastsVisible"
            },
            {
                "key": "down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "scm.viewNextCommit"
                },
                "when": "kb-macro.recording && scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
            },
            {
                "key": "down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "settings.action.focusSettingsFromSearch"
                },
                "when": "kb-macro.recording && inSettingsSearch && !suggestWidgetVisible"
            },
            {
                "key": "down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.interactivePlayground.arrowDown"
                },
                "when": "kb-macro.recording && interactivePlaygroundFocus && !editorTextFocus"
            },
            {
                "key": "down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.banner.focusNextAction"
                },
                "when": "kb-macro.recording && bannerFocused"
            },
            {
                "key": "down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.statusBar.focusNext"
                },
                "when": "kb-macro.recording && statusBarFocused"
            },
            {
                "key": "ctrl+shift+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorDownSelect"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "shift+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorDownSelect"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "shift+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorColumnSelectDown"
                },
                "when": "kb-macro.recording && editorColumnSelection && textInputFocus"
            },
            {
                "key": "shift+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.expandSelectionDown"
                },
                "when": "kb-macro.recording && listFocus && listSupportsMultiselect && !inputFocus"
            },
            {
                "key": "end",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorEnd",
                    "args": {
                        "sticky": false
                    }
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "end",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.focusLast"
                },
                "when": "kb-macro.recording && listFocus && !inputFocus"
            },
            {
                "key": "end",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notifications.focusLastToast"
                },
                "when": "kb-macro.recording && notificationFocus && notificationToastsVisible"
            },
            {
                "key": "end",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.statusBar.focusLast"
                },
                "when": "kb-macro.recording && statusBarFocused"
            },
            {
                "key": "end",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "lastCompressedFolder"
                },
                "when": "kb-macro.recording && explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
            },
            {
                "key": "shift+end",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorEndSelect",
                    "args": {
                        "sticky": false
                    }
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "home",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorHome"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "home",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.focusFirst"
                },
                "when": "kb-macro.recording && listFocus && !inputFocus"
            },
            {
                "key": "home",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notifications.focusFirstToast"
                },
                "when": "kb-macro.recording && notificationFocus && notificationToastsVisible"
            },
            {
                "key": "home",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.statusBar.focusFirst"
                },
                "when": "kb-macro.recording && statusBarFocused"
            },
            {
                "key": "home",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "firstCompressedFolder"
                },
                "when": "kb-macro.recording && explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
            },
            {
                "key": "shift+home",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorHomeSelect"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorLeft"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breadcrumbs.focusPrevious"
                },
                "when": "kb-macro.recording && breadcrumbsActive && breadcrumbsVisible"
            },
            {
                "key": "left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.collapse"
                },
                "when": "kb-macro.recording && listFocus && !inputFocus"
            },
            {
                "key": "left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.fold"
                },
                "when": "kb-macro.recording && notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
            },
            {
                "key": "left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notification.collapse"
                },
                "when": "kb-macro.recording && notificationFocus"
            },
            {
                "key": "left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "settings.action.focusTOC"
                },
                "when": "kb-macro.recording && inSettingsEditor && settingRowFocus"
            },
            {
                "key": "left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.banner.focusPreviousAction"
                },
                "when": "kb-macro.recording && bannerFocused"
            },
            {
                "key": "left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.statusBar.focusPrevious"
                },
                "when": "kb-macro.recording && statusBarFocused"
            },
            {
                "key": "left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "previousCompressedFolder"
                },
                "when": "kb-macro.recording && explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
            },
            {
                "key": "shift+left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorLeftSelect"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "shift+left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorColumnSelectLeft"
                },
                "when": "kb-macro.recording && editorColumnSelection && textInputFocus"
            },
            {
                "key": "pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorPageDown"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "selectNextPageSuggestion"
                },
                "when": "kb-macro.recording && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.focusPageDown"
                },
                "when": "kb-macro.recording && listFocus && !inputFocus"
            },
            {
                "key": "pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notifications.focusLastToast"
                },
                "when": "kb-macro.recording && notificationFocus && notificationToastsVisible"
            },
            {
                "key": "pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.interactivePlayground.pageDown"
                },
                "when": "kb-macro.recording && interactivePlaygroundFocus && !editorTextFocus"
            },
            {
                "key": "shift+pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorPageDownSelect"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "shift+pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorColumnSelectPageDown"
                },
                "when": "kb-macro.recording && editorColumnSelection && textInputFocus"
            },
            {
                "key": "shift+pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.scrollDownPage"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
            },
            {
                "key": "pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorPageUp"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "selectPrevPageSuggestion"
                },
                "when": "kb-macro.recording && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.focusPageUp"
                },
                "when": "kb-macro.recording && listFocus && !inputFocus"
            },
            {
                "key": "pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notifications.focusFirstToast"
                },
                "when": "kb-macro.recording && notificationFocus && notificationToastsVisible"
            },
            {
                "key": "pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.interactivePlayground.pageUp"
                },
                "when": "kb-macro.recording && interactivePlaygroundFocus && !editorTextFocus"
            },
            {
                "key": "shift+pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorPageUpSelect"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "shift+pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorColumnSelectPageUp"
                },
                "when": "kb-macro.recording && editorColumnSelection && textInputFocus"
            },
            {
                "key": "shift+pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.scrollUpPage"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
            },
            {
                "key": "right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorRight"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breadcrumbs.focusNext"
                },
                "when": "kb-macro.recording && breadcrumbsActive && breadcrumbsVisible"
            },
            {
                "key": "right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.expand"
                },
                "when": "kb-macro.recording && listFocus && !inputFocus"
            },
            {
                "key": "right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.unfold"
                },
                "when": "kb-macro.recording && notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
            },
            {
                "key": "right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notification.expand"
                },
                "when": "kb-macro.recording && notificationFocus"
            },
            {
                "key": "right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.banner.focusNextAction"
                },
                "when": "kb-macro.recording && bannerFocused"
            },
            {
                "key": "right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.statusBar.focusNext"
                },
                "when": "kb-macro.recording && statusBarFocused"
            },
            {
                "key": "right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "nextCompressedFolder"
                },
                "when": "kb-macro.recording && explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
            },
            {
                "key": "shift+right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorRightSelect"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "shift+right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorColumnSelectRight"
                },
                "when": "kb-macro.recording && editorColumnSelection && textInputFocus"
            },
            {
                "key": "ctrl+home",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorTop"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "ctrl+home",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.focusTop"
                },
                "when": "kb-macro.recording && notebookEditorFocused && !inputFocus"
            },
            {
                "key": "ctrl+home",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.scrollToTop"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
            },
            {
                "key": "ctrl+shift+home",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorTopSelect"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorUp"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.focusPreviousEditor"
                },
                "when": "kb-macro.recording && config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
            },
            {
                "key": "up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "showPrevParameterHint"
                },
                "when": "kb-macro.recording && editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
            },
            {
                "key": "up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "selectPrevSuggestion"
                },
                "when": "kb-macro.recording && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "history.showPrevious"
                },
                "when": "kb-macro.recording && historyNavigationBackwardsEnabled && historyNavigationWidget && !suggestWidgetVisible"
            },
            {
                "key": "up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "interactive.history.previous"
                },
                "when": "kb-macro.recording && !suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
            },
            {
                "key": "up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.focusUp"
                },
                "when": "kb-macro.recording && listFocus && !inputFocus"
            },
            {
                "key": "up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notifications.focusPreviousToast"
                },
                "when": "kb-macro.recording && notificationFocus && notificationToastsVisible"
            },
            {
                "key": "up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "scm.viewPreviousCommit"
                },
                "when": "kb-macro.recording && scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
            },
            {
                "key": "up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.interactivePlayground.arrowUp"
                },
                "when": "kb-macro.recording && interactivePlaygroundFocus && !editorTextFocus"
            },
            {
                "key": "up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.banner.focusPreviousAction"
                },
                "when": "kb-macro.recording && bannerFocused"
            },
            {
                "key": "up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.statusBar.focusPrevious"
                },
                "when": "kb-macro.recording && statusBarFocused"
            },
            {
                "key": "ctrl+shift+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorUpSelect"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "shift+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorUpSelect"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "shift+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorColumnSelectUp"
                },
                "when": "kb-macro.recording && editorColumnSelection && textInputFocus"
            },
            {
                "key": "shift+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.expandSelectionUp"
                },
                "when": "kb-macro.recording && listFocus && listSupportsMultiselect && !inputFocus"
            },
            {
                "key": "shift+backspace",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "deleteLeft"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "backspace",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "deleteLeft"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "deleteRight"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "debug.removeBreakpoint"
                },
                "when": "kb-macro.recording && breakpointsFocused && !breakpointInputFocused"
            },
            {
                "key": "delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "debug.removeWatchExpression"
                },
                "when": "kb-macro.recording && watchExpressionsFocused && !expressionSelected"
            },
            {
                "key": "delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "keybindings.editor.removeKeybinding"
                },
                "when": "kb-macro.recording && inKeybindings && keybindingFocus && !inputFocus"
            },
            {
                "key": "delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.delete"
                },
                "when": "kb-macro.recording && notebookEditable && notebookEditorFocused && !inputFocus"
            },
            {
                "key": "delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notification.clear"
                },
                "when": "kb-macro.recording && notificationFocus"
            },
            {
                "key": "delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.remove"
                },
                "when": "kb-macro.recording && fileMatchOrMatchFocus && searchViewletVisible"
            },
            {
                "key": "delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.killInstance"
                },
                "when": "kb-macro.recording && terminalIsOpen && terminalTabsFocus || kb-macro.recording && terminalProcessSupported && terminalTabsFocus"
            },
            {
                "key": "delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "deleteFile"
                },
                "when": "kb-macro.recording && explorerViewletVisible && filesExplorerFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
            },
            {
                "key": "delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "moveFileToTrash"
                },
                "when": "kb-macro.recording && explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
            },
            {
                "key": "delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "remote.tunnel.closeInline"
                },
                "when": "kb-macro.recording && tunnelCloseable && tunnelViewFocus"
            },
            {
                "key": "ctrl+a",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.selectAll"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+a",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.selectAll"
                },
                "when": "kb-macro.recording && listFocus && listSupportsMultiselect && !inputFocus"
            },
            {
                "key": "ctrl+l",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "expandLineSelection"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "ctrl+l",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.centerActiveCell"
                },
                "when": "kb-macro.recording && notebookEditorFocused"
            },
            {
                "key": "shift+tab",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "outdent"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
            },
            {
                "key": "shift+tab",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "jumpToPrevSnippetPlaceholder"
                },
                "when": "kb-macro.recording && editorTextFocus && hasPrevTabstop && inSnippetMode"
            },
            {
                "key": "shift+tab",
                "command": "acceptAlternativeSelectedSuggestion",
                "when": "kb-macro.recording && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "shift+tab",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "insertPrevSuggestion"
                },
                "when": "kb-macro.recording && hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
            },
            {
                "key": "ctrl+shift+z",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "redo"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+y",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "redo"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "scrollLineDown"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "ctrl+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "selectNextSuggestion"
                },
                "when": "kb-macro.recording && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "ctrl+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "keybindings.editor.focusKeybindings"
                },
                "when": "kb-macro.recording && inKeybindings && inKeybindingsSearch"
            },
            {
                "key": "ctrl+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.scrollDown"
                },
                "when": "kb-macro.recording && listFocus && !inputFocus"
            },
            {
                "key": "ctrl+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.focusInOutput"
                },
                "when": "kb-macro.recording && notebookCellHasOutputs && notebookEditorFocused"
            },
            {
                "key": "ctrl+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.focusNextEditor"
                },
                "when": "kb-macro.recording && notebookEditorFocused && notebookOutputFocused"
            },
            {
                "key": "ctrl+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "problems.action.focusProblemsFromFilter"
                },
                "when": "kb-macro.recording && problemsFilterFocus"
            },
            {
                "key": "ctrl+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.focus.nextInputBox"
                },
                "when": "kb-macro.recording && inSearchEditor && inputBoxFocus || kb-macro.recording && inputBoxFocus && searchViewletVisible"
            },
            {
                "key": "ctrl+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.navigationModeFocusNext"
                },
                "when": "kb-macro.recording && accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || kb-macro.recording && accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "ctrl+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "scrollLineUp"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "ctrl+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "selectPrevSuggestion"
                },
                "when": "kb-macro.recording && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "ctrl+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.scrollUp"
                },
                "when": "kb-macro.recording && listFocus && !inputFocus"
            },
            {
                "key": "ctrl+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.focusOutOutput"
                },
                "when": "kb-macro.recording && notebookEditorFocused"
            },
            {
                "key": "ctrl+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.focusSearchFromResults"
                },
                "when": "kb-macro.recording && firstMatchFocus && searchViewletVisible"
            },
            {
                "key": "ctrl+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.focus.previousInputBox"
                },
                "when": "kb-macro.recording && inSearchEditor && inputBoxFocus || kb-macro.recording && inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
            },
            {
                "key": "ctrl+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.navigationModeFocusPrevious"
                },
                "when": "kb-macro.recording && accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || kb-macro.recording && accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "alt+pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "scrollPageDown"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "alt+pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "scrollPageUp"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "tab",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "tab"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
            },
            {
                "key": "tab",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.emmet.action.expandAbbreviation"
                },
                "when": "kb-macro.recording && config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
            },
            {
                "key": "tab",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "insertSnippet"
                },
                "when": "kb-macro.recording && editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
            },
            {
                "key": "tab",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "jumpToNextSnippetPlaceholder"
                },
                "when": "kb-macro.recording && editorTextFocus && hasNextTabstop && inSnippetMode"
            },
            {
                "key": "tab",
                "command": "acceptSelectedSuggestion",
                "when": "kb-macro.recording && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "tab",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "insertBestCompletion"
                },
                "when": "kb-macro.recording && atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
            },
            {
                "key": "tab",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "insertNextSuggestion"
                },
                "when": "kb-macro.recording && hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
            },
            {
                "key": "tab",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.inlineSuggest.commit"
                },
                "when": "kb-macro.recording && inlineSuggestionVisible && !editorTabMovesFocus && !inlineSuggestionHasIndentation"
            },
            {
                "key": "ctrl+z",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "undo"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "f12",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "goToNextReference"
                },
                "when": "kb-macro.recording && inReferenceSearchEditor || kb-macro.recording && referenceSearchVisible"
            },
            {
                "key": "f12",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.revealDefinition"
                },
                "when": "kb-macro.recording && editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
            },
            {
                "key": "f12",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.gotoNextSymbolFromResult"
                },
                "when": "kb-macro.recording && hasSymbols"
            },
            {
                "key": "f4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "goToNextReference"
                },
                "when": "kb-macro.recording && inReferenceSearchEditor || kb-macro.recording && referenceSearchVisible"
            },
            {
                "key": "f4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.focusNextSearchResult"
                },
                "when": "kb-macro.recording && hasSearchResult || kb-macro.recording && inSearchEditor"
            },
            {
                "key": "f4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "references-view.next"
                },
                "when": "kb-macro.recording && reference-list.hasResult && references-view.canNavigate"
            },
            {
                "key": "shift+f12",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "goToPreviousReference"
                },
                "when": "kb-macro.recording && inReferenceSearchEditor || kb-macro.recording && referenceSearchVisible"
            },
            {
                "key": "shift+f12",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.goToReferences"
                },
                "when": "kb-macro.recording && editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
            },
            {
                "key": "shift+f4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "goToPreviousReference"
                },
                "when": "kb-macro.recording && inReferenceSearchEditor || kb-macro.recording && referenceSearchVisible"
            },
            {
                "key": "shift+f4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.focusPreviousSearchResult"
                },
                "when": "kb-macro.recording && hasSearchResult || kb-macro.recording && inSearchEditor"
            },
            {
                "key": "shift+f4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "references-view.prev"
                },
                "when": "kb-macro.recording && reference-list.hasResult && references-view.canNavigate"
            },
            {
                "key": "shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "refactorPreview.apply"
                },
                "when": "kb-macro.recording && refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'"
            },
            {
                "key": "shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.extensioneditor.findPrevious"
                },
                "when": "kb-macro.recording && webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
            },
            {
                "key": "shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.previousMatchFindAction"
                },
                "when": "kb-macro.recording && editorFocus && findInputFocussed"
            },
            {
                "key": "shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.webvieweditor.findPrevious"
                },
                "when": "kb-macro.recording && webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
            },
            {
                "key": "shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.executeAndSelectBelow"
                },
                "when": "kb-macro.recording && notebookCellListFocused && notebookCellType == 'markup' || kb-macro.recording && notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || kb-macro.recording && notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
            },
            {
                "key": "shift+enter",
                "command": "acceptAlternativeSelectedSuggestion",
                "when": "kb-macro.recording && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "acceptRenameInputWithPreview"
                },
                "when": "kb-macro.recording && config.editor.rename.enablePreview && editorFocus && renameInputVisible"
            },
            {
                "key": "shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.refocusCallHierarchy"
                },
                "when": "kb-macro.recording && callHierarchyVisible"
            },
            {
                "key": "shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.refocusTypeHierarchy"
                },
                "when": "kb-macro.recording && typeHierarchyVisible"
            },
            {
                "key": "shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.findNext"
                },
                "when": "kb-macro.recording && terminalFindFocused && terminalProcessSupported"
            },
            {
                "key": "alt+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.editFocusedTest"
                },
                "when": "kb-macro.recording && focusedView == 'workbench.view.testing'"
            },
            {
                "key": "alt+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.executeAndInsertBelow"
                },
                "when": "kb-macro.recording && notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || kb-macro.recording && notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
            },
            {
                "key": "alt+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.selectAllMatches"
                },
                "when": "kb-macro.recording && editorFocus && findWidgetVisible"
            },
            {
                "key": "alt+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "debug.openBreakpointToSide"
                },
                "when": "kb-macro.recording && breakpointsFocused"
            },
            {
                "key": "alt+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.openInEditor"
                },
                "when": "kb-macro.recording && hasSearchResult && searchViewletFocus"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.quitEdit"
                },
                "when": "kb-macro.recording && inputFocus && notebookEditorFocused && notebookCellType == 'markup'"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.execute"
                },
                "when": "kb-macro.recording && notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || kb-macro.recording && notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.replaceAll"
                },
                "when": "kb-macro.recording && editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+alt+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.replaceAll"
                },
                "when": "kb-macro.recording && replaceActive && searchViewletVisible && !findWidgetVisible"
            },
            {
                "key": "ctrl+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "actions.find"
                },
                "when": "kb-macro.recording && editorFocus || kb-macro.recording && editorIsOpen"
            },
            {
                "key": "ctrl+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.extensioneditor.showfind"
                },
                "when": "kb-macro.recording && !editorFocus && activeEditor == 'workbench.editor.extension'"
            },
            {
                "key": "ctrl+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.webvieweditor.showFind"
                },
                "when": "kb-macro.recording && webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor'"
            },
            {
                "key": "ctrl+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "repl.action.filter"
                },
                "when": "kb-macro.recording && inDebugRepl && textInputFocus"
            },
            {
                "key": "ctrl+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "settings.action.search"
                },
                "when": "kb-macro.recording && inSettingsEditor"
            },
            {
                "key": "ctrl+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "keybindings.editor.searchKeybindings"
                },
                "when": "kb-macro.recording && inKeybindings"
            },
            {
                "key": "ctrl+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.find"
                },
                "when": "kb-macro.recording && notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
            },
            {
                "key": "ctrl+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "problems.action.focusFilter"
                },
                "when": "kb-macro.recording && focusedView == 'workbench.panel.markers.view'"
            },
            {
                "key": "ctrl+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.focusFind"
                },
                "when": "kb-macro.recording && terminalFindFocused && terminalProcessSupported || kb-macro.recording && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breakpointWidget.action.acceptInput"
                },
                "when": "kb-macro.recording && breakpointWidgetVisible && inBreakpointWidget"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.extensioneditor.findNext"
                },
                "when": "kb-macro.recording && webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.nextMatchFindAction"
                },
                "when": "kb-macro.recording && editorFocus && findInputFocussed"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.webvieweditor.findNext"
                },
                "when": "kb-macro.recording && webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "repl.action.acceptInput"
                },
                "when": "kb-macro.recording && inDebugRepl && textInputFocus"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.replaceOne"
                },
                "when": "kb-macro.recording && editorFocus && findWidgetVisible && replaceInputFocussed"
            },
            {
                "key": "enter",
                "command": "acceptSelectedSuggestion",
                "when": "kb-macro.recording && acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "acceptRenameInput"
                },
                "when": "kb-macro.recording && editorFocus && renameInputVisible"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breadcrumbs.selectFocused"
                },
                "when": "kb-macro.recording && breadcrumbsActive && breadcrumbsVisible"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "keybindings.editor.defineKeybinding"
                },
                "when": "kb-macro.recording && inKeybindings && keybindingFocus"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.select"
                },
                "when": "kb-macro.recording && listFocus && !inputFocus"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.edit"
                },
                "when": "kb-macro.recording && notebookCellListFocused && notebookEditable && !inputFocus"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notification.toggle"
                },
                "when": "kb-macro.recording && notificationFocus"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "problems.action.open"
                },
                "when": "kb-macro.recording && problemFocus"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "revealReference"
                },
                "when": "kb-macro.recording && listFocus && referenceSearchVisible && !inputFocus"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.openResult"
                },
                "when": "kb-macro.recording && fileMatchOrMatchFocus && searchViewletVisible"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "settings.action.focusSettingControl"
                },
                "when": "kb-macro.recording && settingRowFocus"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "settings.action.focusSettingsList"
                },
                "when": "kb-macro.recording && inSettingsEditor && settingsTocRowFocus"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.findPrevious"
                },
                "when": "kb-macro.recording && terminalFindFocused && terminalProcessSupported"
            },
            {
                "key": "enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "explorer.openAndPassFocus"
                },
                "when": "kb-macro.recording && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
            },
            {
                "key": "ctrl+u",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorUndo"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "ctrl+right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorWordEndRight"
                },
                "when": "kb-macro.recording && textInputFocus && !accessibilityModeEnabled"
            },
            {
                "key": "ctrl+right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breadcrumbs.focusNext"
                },
                "when": "kb-macro.recording && breadcrumbsActive && breadcrumbsVisible"
            },
            {
                "key": "ctrl+right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breadcrumbs.focusNextWithPicker"
                },
                "when": "kb-macro.recording && breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
            },
            {
                "key": "ctrl+shift+right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorWordEndRightSelect"
                },
                "when": "kb-macro.recording && textInputFocus && !accessibilityModeEnabled"
            },
            {
                "key": "ctrl+left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorWordLeft"
                },
                "when": "kb-macro.recording && textInputFocus && !accessibilityModeEnabled"
            },
            {
                "key": "ctrl+left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breadcrumbs.focusPrevious"
                },
                "when": "kb-macro.recording && breadcrumbsActive && breadcrumbsVisible"
            },
            {
                "key": "ctrl+left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.collapseAll"
                },
                "when": "kb-macro.recording && listFocus && !inputFocus"
            },
            {
                "key": "ctrl+left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breadcrumbs.focusPreviousWithPicker"
                },
                "when": "kb-macro.recording && breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
            },
            {
                "key": "ctrl+shift+left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "cursorWordLeftSelect"
                },
                "when": "kb-macro.recording && textInputFocus && !accessibilityModeEnabled"
            },
            {
                "key": "ctrl+backspace",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "deleteWordLeft"
                },
                "when": "kb-macro.recording && textInputFocus && !editorReadonly"
            },
            {
                "key": "ctrl+backspace",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "\u0017"
                    }
                },
                "when": "kb-macro.recording && terminalFocus"
            },
            {
                "key": "ctrl+backspace",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "\b"
                    }
                },
                "when": "kb-macro.recording && terminalFocus && terminalShellType == 'cmd'"
            },
            {
                "key": "ctrl+delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "deleteWordRight"
                },
                "when": "kb-macro.recording && textInputFocus && !editorReadonly"
            },
            {
                "key": "ctrl+delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "\u001bd"
                    }
                },
                "when": "kb-macro.recording && terminalFocus"
            },
            {
                "key": "ctrl+k ctrl+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.addCommentLine"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+k ctrl+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.collapseCellInput"
                },
                "when": "kb-macro.recording && notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
            },
            {
                "key": "ctrl+k ctrl+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.expandCellInput"
                },
                "when": "kb-macro.recording && notebookCellInputIsCollapsed && notebookCellListFocused"
            },
            {
                "key": "ctrl+d",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.addSelectionToNextFindMatch"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "shift+alt+oem_period",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.autoFix"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
            },
            {
                "key": "shift+alt+a",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.blockComment"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+f2",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.changeAll"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+insert",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.clipboardCopyAction",
                    "await": "clipboard"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.clipboardCopyAction",
                    "await": "clipboard"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "keybindings.editor.copyKeybindingEntry"
                },
                "when": "kb-macro.recording && inKeybindings && keybindingFocus"
            },
            {
                "key": "ctrl+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "problems.action.copy"
                },
                "when": "kb-macro.recording && problemFocus"
            },
            {
                "key": "ctrl+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.copyMatch"
                },
                "when": "kb-macro.recording && fileMatchOrMatchFocus"
            },
            {
                "key": "ctrl+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.copySelection"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported && terminalTextSelected"
            },
            {
                "key": "ctrl+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "filesExplorer.copy"
                },
                "when": "kb-macro.recording && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
            },
            {
                "key": "ctrl+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "remote.tunnel.copyAddressInline"
                },
                "when": "kb-macro.recording && tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || kb-macro.recording && tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
            },
            {
                "key": "shift+delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.clipboardCutAction",
                    "await": "document selection clipboard"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "shift+delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "deleteFile"
                },
                "when": "kb-macro.recording && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
            },
            {
                "key": "ctrl+x",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.clipboardCutAction",
                    "await": "document selection clipboard"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+x",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "filesExplorer.cut"
                },
                "when": "kb-macro.recording && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
            },
            {
                "key": "shift+insert",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.clipboardPasteAction",
                    "await": "document selection"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+v",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.clipboardPasteAction",
                    "await": "document selection"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+v",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.paste"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "ctrl+v",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.sendSequence",
                    "args": {
                        "text": "\u0016"
                    }
                },
                "when": "kb-macro.recording && terminalFocus && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
            },
            {
                "key": "ctrl+v",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "filesExplorer.paste"
                },
                "when": "kb-macro.recording && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
            },
            {
                "key": "ctrl+oem_2",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.commentLine"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+oem_2",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleExplainMode"
                },
                "when": "kb-macro.recording && suggestWidgetVisible"
            },
            {
                "key": "shift+alt+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.copyLinesDownAction"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "shift+alt+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.copyDown"
                },
                "when": "kb-macro.recording && notebookEditorFocused && !inputFocus"
            },
            {
                "key": "shift+alt+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.copyLinesUpAction"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "shift+alt+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.copyUp"
                },
                "when": "kb-macro.recording && notebookEditorFocused && !inputFocus"
            },
            {
                "key": "ctrl+k ctrl+k",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.defineKeybinding"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
            },
            {
                "key": "ctrl+k ctrl+k",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.selectFromAnchorToCursor"
                },
                "when": "kb-macro.recording && editorTextFocus && selectionAnchorSet"
            },
            {
                "key": "ctrl+shift+k",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.deleteLines"
                },
                "when": "kb-macro.recording && textInputFocus && !editorReadonly"
            },
            {
                "key": "f7",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.diffReview.next"
                },
                "when": "kb-macro.recording && isInDiffEditor"
            },
            {
                "key": "f7",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.wordHighlight.next"
                },
                "when": "kb-macro.recording && editorTextFocus && hasWordHighlights"
            },
            {
                "key": "shift+f7",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.diffReview.prev"
                },
                "when": "kb-macro.recording && isInDiffEditor"
            },
            {
                "key": "shift+f7",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.wordHighlight.prev"
                },
                "when": "kb-macro.recording && editorTextFocus && hasWordHighlights"
            },
            {
                "key": "alt+f3",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.dirtydiff.next"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "shift+alt+f3",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.dirtydiff.previous"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "shift+alt+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.formatDocument"
                },
                "when": "kb-macro.recording && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
            },
            {
                "key": "shift+alt+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.formatDocument.none"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
            },
            {
                "key": "shift+alt+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.formatCell"
                },
                "when": "kb-macro.recording && editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
            },
            {
                "key": "shift+alt+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "filesExplorer.findInFolder"
                },
                "when": "kb-macro.recording && explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus"
            },
            {
                "key": "shift+alt+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.format"
                },
                "when": "kb-macro.recording && notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
            },
            {
                "key": "ctrl+k ctrl+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.formatSelection"
                },
                "when": "kb-macro.recording && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+f12",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.goToImplementation"
                },
                "when": "kb-macro.recording && editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
            },
            {
                "key": "ctrl+shift+oem_period",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.inPlaceReplace.down"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+shift+oem_period",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breadcrumbs.focusAndSelect"
                },
                "when": "kb-macro.recording && breadcrumbsPossible"
            },
            {
                "key": "ctrl+shift+oem_period",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breadcrumbs.toggleToOn"
                },
                "when": "kb-macro.recording && !config.breadcrumbs.enabled"
            },
            {
                "key": "ctrl+shift+oem_comma",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.inPlaceReplace.up"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+oem_6",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.indentLines"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "alt+oem_6",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.inlineSuggest.showNext"
                },
                "when": "kb-macro.recording && inlineSuggestionVisible && !editorReadonly"
            },
            {
                "key": "alt+oem_4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.inlineSuggest.showPrevious"
                },
                "when": "kb-macro.recording && inlineSuggestionVisible && !editorReadonly"
            },
            {
                "key": "ctrl+alt+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.insertCursorAbove"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "shift+alt+i",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.insertCursorAtEndOfEachLineSelected"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "ctrl+alt+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.insertCursorBelow"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "ctrl+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.insertLineAfter"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "interactive.execute"
                },
                "when": "kb-macro.recording && resourceScheme == 'vscode-interactive'"
            },
            {
                "key": "ctrl+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "openReferenceToSide"
                },
                "when": "kb-macro.recording && listFocus && referenceSearchVisible && !inputFocus"
            },
            {
                "key": "ctrl+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.submitComment"
                },
                "when": "kb-macro.recording && commentEditorFocused"
            },
            {
                "key": "ctrl+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breadcrumbs.revealFocused"
                },
                "when": "kb-macro.recording && breadcrumbsActive && breadcrumbsVisible"
            },
            {
                "key": "ctrl+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breadcrumbs.revealFocusedFromTreeAside"
                },
                "when": "kb-macro.recording && breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
            },
            {
                "key": "ctrl+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "debug.openBreakpointToSide"
                },
                "when": "kb-macro.recording && breakpointsFocused"
            },
            {
                "key": "ctrl+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "explorer.openToSide"
                },
                "when": "kb-macro.recording && explorerViewletFocus && explorerViewletVisible && !inputFocus"
            },
            {
                "key": "ctrl+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.insertCodeCellBelow"
                },
                "when": "kb-macro.recording && notebookCellListFocused && !inputFocus"
            },
            {
                "key": "ctrl+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "problems.action.openToSide"
                },
                "when": "kb-macro.recording && problemFocus"
            },
            {
                "key": "ctrl+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "scm.acceptInput"
                },
                "when": "kb-macro.recording && scmRepository"
            },
            {
                "key": "ctrl+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.openResultToSide"
                },
                "when": "kb-macro.recording && fileMatchOrMatchFocus && searchViewletVisible"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.insertLineBefore"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.toggleSelection"
                },
                "when": "kb-macro.recording && listFocus && !inputFocus"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.insertCodeCellAbove"
                },
                "when": "kb-macro.recording && notebookCellListFocused && !inputFocus"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.replaceAllInFile"
                },
                "when": "kb-macro.recording && fileMatchFocus && replaceActive && searchViewletVisible"
            },
            {
                "key": "ctrl+shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.replaceAllInFolder"
                },
                "when": "kb-macro.recording && folderMatchFocus && replaceActive && searchViewletVisible"
            },
            {
                "key": "ctrl+shift+oem_5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.jumpToBracket"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "ctrl+shift+oem_5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.focusTabs"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported || kb-macro.recording && terminalProcessSupported && terminalTabsFocus"
            },
            {
                "key": "ctrl+shift+f2",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.linkedEditing"
                },
                "when": "kb-macro.recording && editorHasRenameProvider && editorTextFocus && !editorReadonly"
            },
            {
                "key": "alt+f8",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.marker.next"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "alt+f8",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.goToNextMessage"
                },
                "when": "kb-macro.recording && editorFocus && testing.isPeekVisible"
            },
            {
                "key": "f8",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.marker.nextInFiles"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "shift+alt+f8",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.marker.prev"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "shift+alt+f8",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.goToPreviousMessage"
                },
                "when": "kb-macro.recording && editorFocus && testing.isPeekVisible"
            },
            {
                "key": "shift+f8",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.marker.prevInFiles"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "alt+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.moveLinesDownAction"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "alt+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "showNextParameterHint"
                },
                "when": "kb-macro.recording && editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
            },
            {
                "key": "alt+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "history.showNext"
                },
                "when": "kb-macro.recording && historyNavigationForwardsEnabled && historyNavigationWidget && !suggestWidgetVisible"
            },
            {
                "key": "alt+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.moveDown"
                },
                "when": "kb-macro.recording && notebookEditorFocused && !inputFocus"
            },
            {
                "key": "alt+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "scm.forceViewNextCommit"
                },
                "when": "kb-macro.recording && scmRepository"
            },
            {
                "key": "alt+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.focusNextPane"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "alt+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.moveLinesUpAction"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "alt+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "showPrevParameterHint"
                },
                "when": "kb-macro.recording && editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
            },
            {
                "key": "alt+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "history.showPrevious"
                },
                "when": "kb-macro.recording && historyNavigationBackwardsEnabled && historyNavigationWidget && !suggestWidgetVisible"
            },
            {
                "key": "alt+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.moveUp"
                },
                "when": "kb-macro.recording && notebookEditorFocused && !inputFocus"
            },
            {
                "key": "alt+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "scm.forceViewPreviousCommit"
                },
                "when": "kb-macro.recording && scmRepository"
            },
            {
                "key": "alt+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.focusPreviousPane"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "ctrl+k ctrl+d",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.moveSelectionToNextFindMatch"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "f3",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.nextMatchFindAction"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "f3",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.findNext"
                },
                "when": "kb-macro.recording && terminalFindFocused && terminalProcessSupported || kb-macro.recording && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "ctrl+f3",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.nextSelectionMatchFindAction"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "shift+alt+o",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.organizeImports"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
            },
            {
                "key": "ctrl+oem_4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.outdentLines"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "alt+f12",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.peekDefinition"
                },
                "when": "kb-macro.recording && editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
            },
            {
                "key": "ctrl+shift+f12",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.peekImplementation"
                },
                "when": "kb-macro.recording && editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
            },
            {
                "key": "shift+f3",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.previousMatchFindAction"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "shift+f3",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.findPrevious"
                },
                "when": "kb-macro.recording && terminalFindFocused && terminalProcessSupported || kb-macro.recording && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "ctrl+shift+f3",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.previousSelectionMatchFindAction"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "ctrl+oem_period",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.quickFix"
                },
                "when": "kb-macro.recording && editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+oem_period",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "problems.action.showQuickFixes"
                },
                "when": "kb-macro.recording && problemFocus"
            },
            {
                "key": "ctrl+shift+r",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.refactor"
                },
                "when": "kb-macro.recording && editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
            },
            {
                "key": "ctrl+shift+r",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "rerunSearchEditorSearch"
                },
                "when": "kb-macro.recording && inSearchEditor"
            },
            {
                "key": "ctrl+shift+r",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker"
                },
                "when": "kb-macro.recording && inQuickOpen && inRecentFilesPicker"
            },
            {
                "key": "ctrl+k ctrl+u",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.removeCommentLine"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "f2",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.rename"
                },
                "when": "kb-macro.recording && editorHasRenameProvider && editorTextFocus && !editorReadonly"
            },
            {
                "key": "f2",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.renameInstance"
                },
                "when": "kb-macro.recording && terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
            },
            {
                "key": "f2",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "debug.renameWatchExpression"
                },
                "when": "kb-macro.recording && watchExpressionsFocused"
            },
            {
                "key": "f2",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "debug.setVariable"
                },
                "when": "kb-macro.recording && variablesFocused"
            },
            {
                "key": "f2",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "remote.tunnel.label"
                },
                "when": "kb-macro.recording && tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
            },
            {
                "key": "f2",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "renameFile"
                },
                "when": "kb-macro.recording && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
            },
            {
                "key": "ctrl+k f12",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.revealDefinitionAside"
                },
                "when": "kb-macro.recording && editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
            },
            {
                "key": "ctrl+shift+l",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.selectHighlights"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "ctrl+shift+l",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "addCursorsAtSearchResults"
                },
                "when": "kb-macro.recording && fileMatchOrMatchFocus && searchViewletVisible"
            },
            {
                "key": "ctrl+shift+l",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "selectAllSearchEditorMatches"
                },
                "when": "kb-macro.recording && inSearchEditor"
            },
            {
                "key": "ctrl+k ctrl+b",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.setSelectionAnchor"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "alt+f1",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.showAccessibilityHelp"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "shift+f10",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.showContextMenu"
                },
                "when": "kb-macro.recording && textInputFocus"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.showHover"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "ctrl+k ctrl+i",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.debug.action.showDebugHover"
                },
                "when": "kb-macro.recording && editorTextFocus && inDebugMode"
            },
            {
                "key": "shift+alt+right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.smartSelect.expand"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "shift+alt+left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.smartSelect.shrink"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "ctrl+h",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.startFindReplaceAction"
                },
                "when": "kb-macro.recording && editorFocus || kb-macro.recording && editorIsOpen"
            },
            {
                "key": "ctrl+h",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.toggleTestingPeekHistory"
                },
                "when": "kb-macro.recording && testing.isPeekVisible"
            },
            {
                "key": "ctrl+m",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.toggleTabFocusMode"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+z",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.toggleWordWrap"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+z",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.sizeToContentWidth"
                },
                "when": "kb-macro.recording && terminalFocus && terminalIsOpen && terminalProcessSupported"
            },
            {
                "key": "ctrl+shift+space",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.triggerParameterHints"
                },
                "when": "kb-macro.recording && editorHasSignatureHelpProvider && editorTextFocus"
            },
            {
                "key": "ctrl+i",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.triggerSuggest"
                },
                "when": "kb-macro.recording && editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
            },
            {
                "key": "ctrl+i",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleSuggestionDetails"
                },
                "when": "kb-macro.recording && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "ctrl+space",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.triggerSuggest"
                },
                "when": "kb-macro.recording && editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
            },
            {
                "key": "ctrl+space",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleSuggestionDetails"
                },
                "when": "kb-macro.recording && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "ctrl+k ctrl+x",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.trimTrailingWhitespace"
                },
                "when": "kb-macro.recording && editorTextFocus && !editorReadonly"
            },
            {
                "key": "f9",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.debug.action.toggleBreakpoint"
                },
                "when": "kb-macro.recording && debuggersAvailable && editorTextFocus"
            },
            {
                "key": "ctrl+shift+oem_4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.fold"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+shift+oem_4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.fold"
                },
                "when": "kb-macro.recording && notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
            },
            {
                "key": "ctrl+k ctrl+0",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.foldAll"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+k ctrl+oem_2",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.foldAllBlockComments"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+k ctrl+oem_minus",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.foldAllExcept"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+k ctrl+8",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.foldAllMarkerRegions"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+k ctrl+1",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.foldLevel1"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+k ctrl+2",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.foldLevel2"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+k ctrl+3",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.foldLevel3"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+k ctrl+4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.foldLevel4"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+k ctrl+5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.foldLevel5"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+k ctrl+6",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.foldLevel6"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+k ctrl+7",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.foldLevel7"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+k ctrl+oem_4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.foldRecursively"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+k ctrl+l",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.toggleFold"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+shift+oem_6",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.unfold"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+shift+oem_6",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.unfold"
                },
                "when": "kb-macro.recording && notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
            },
            {
                "key": "ctrl+k ctrl+j",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.unfoldAll"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+k ctrl+oem_plus",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.unfoldAllExcept"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+k ctrl+9",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.unfoldAllMarkerRegions"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+k ctrl+oem_6",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.unfoldRecursively"
                },
                "when": "kb-macro.recording && editorTextFocus && foldingEnabled"
            },
            {
                "key": "ctrl+shift+v",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.pasteAbove"
                },
                "when": "kb-macro.recording && notebookEditorFocused && !inputFocus"
            },
            {
                "key": "ctrl+shift+v",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.paste"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "ctrl+shift+v",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "markdown.showPreview"
                },
                "when": "kb-macro.recording && !notebookEditorFocused && editorLangId == 'markdown'"
            },
            {
                "key": "ctrl+shift+backspace",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.searchEditor.action.deleteFileResults"
                },
                "when": "kb-macro.recording && inSearchEditor"
            },
            {
                "key": "ctrl+k f2",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "togglePeekWidgetFocus"
                },
                "when": "kb-macro.recording && inReferenceSearchEditor || kb-macro.recording && referenceSearchVisible"
            },
            {
                "key": "alt+f5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.editor.nextChange"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "alt+f5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.compareEditor.nextChange"
                },
                "when": "kb-macro.recording && textCompareEditorVisible"
            },
            {
                "key": "shift+alt+f5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.editor.previousChange"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "shift+alt+f5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.compareEditor.previousChange"
                },
                "when": "kb-macro.recording && textCompareEditorVisible"
            },
            {
                "key": "ctrl+shift+1",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.action.replaceOne"
                },
                "when": "kb-macro.recording && editorFocus && findWidgetVisible"
            },
            {
                "key": "ctrl+shift+1",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.replace"
                },
                "when": "kb-macro.recording && matchFocus && replaceActive && searchViewletVisible"
            },
            {
                "key": "ctrl+shift+1",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.replaceAllInFile"
                },
                "when": "kb-macro.recording && fileMatchFocus && replaceActive && searchViewletVisible"
            },
            {
                "key": "ctrl+shift+1",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.replaceAllInFolder"
                },
                "when": "kb-macro.recording && folderMatchFocus && replaceActive && searchViewletVisible"
            },
            {
                "key": "alt+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleFindCaseSensitive"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "alt+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleSearchCaseSensitive"
                },
                "when": "kb-macro.recording && searchViewletFocus"
            },
            {
                "key": "alt+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleSearchEditorCaseSensitive"
                },
                "when": "kb-macro.recording && inSearchEditor && searchInputBoxFocus"
            },
            {
                "key": "alt+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.toggleFindCaseSensitive"
                },
                "when": "kb-macro.recording && terminalFindFocused && terminalProcessSupported || kb-macro.recording && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "alt+l",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleFindInSelection"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "alt+l",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleSearchEditorContextLines"
                },
                "when": "kb-macro.recording && inSearchEditor"
            },
            {
                "key": "alt+r",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleFindRegex"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "alt+r",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleSearchEditorRegex"
                },
                "when": "kb-macro.recording && inSearchEditor && searchInputBoxFocus"
            },
            {
                "key": "alt+r",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleSearchRegex"
                },
                "when": "kb-macro.recording && searchViewletFocus"
            },
            {
                "key": "alt+r",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.toggleFindRegex"
                },
                "when": "kb-macro.recording && terminalFindFocused && terminalProcessSupported || kb-macro.recording && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "alt+w",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleFindWholeWord"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "alt+w",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleSearchEditorWholeWord"
                },
                "when": "kb-macro.recording && inSearchEditor && searchInputBoxFocus"
            },
            {
                "key": "alt+w",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleSearchWholeWord"
                },
                "when": "kb-macro.recording && searchViewletFocus"
            },
            {
                "key": "alt+w",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.toggleFindWholeWord"
                },
                "when": "kb-macro.recording && terminalFindFocused && terminalProcessSupported || kb-macro.recording && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "alt+p",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "togglePreserveCase"
                },
                "when": "kb-macro.recording && editorFocus"
            },
            {
                "key": "alt+p",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "keybindings.editor.toggleSortByPrecedence"
                },
                "when": "kb-macro.recording && inKeybindings"
            },
            {
                "key": "alt+p",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleSearchPreserveCase"
                },
                "when": "kb-macro.recording && searchViewletFocus"
            },
            {
                "key": "ctrl+pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "selectNextPageSuggestion"
                },
                "when": "kb-macro.recording && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "ctrl+pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.nextEditor"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.focusNext"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported && !terminalEditorFocus"
            },
            {
                "key": "ctrl+pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "selectPrevPageSuggestion"
                },
                "when": "kb-macro.recording && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "ctrl+pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.previousEditor"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.focusPrevious"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported && !terminalEditorFocus"
            },
            {
                "key": "ctrl+alt+space",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "toggleSuggestionFocus"
                },
                "when": "kb-macro.recording && suggestWidgetVisible && textInputFocus"
            },
            {
                "key": "ctrl+shift+oem_1",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breadcrumbs.focus"
                },
                "when": "kb-macro.recording && breadcrumbsPossible"
            },
            {
                "key": "space",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "breadcrumbs.revealFocused"
                },
                "when": "kb-macro.recording && breadcrumbsActive && breadcrumbsVisible"
            },
            {
                "key": "space",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "list.toggleExpand"
                },
                "when": "kb-macro.recording && listFocus && !inputFocus"
            },
            {
                "key": "space",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notification.toggle"
                },
                "when": "kb-macro.recording && notificationFocus"
            },
            {
                "key": "space",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "refactorPreview.toggleCheckedState"
                },
                "when": "kb-macro.recording && listFocus && refactorPreview.enabled && !inputFocus"
            },
            {
                "key": "space",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "debug.toggleBreakpoint"
                },
                "when": "kb-macro.recording && breakpointsFocused && !inputFocus"
            },
            {
                "key": "space",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "filesExplorer.openFilePreserveFocus"
                },
                "when": "kb-macro.recording && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
            },
            {
                "key": "shift+alt+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "copyFilePath"
                },
                "when": "kb-macro.recording && !editorFocus"
            },
            {
                "key": "shift+alt+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "search.action.copyPath"
                },
                "when": "kb-macro.recording && fileMatchOrFolderMatchWithResourceFocus"
            },
            {
                "key": "ctrl+k ctrl+shift+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "copyRelativeFilePath"
                },
                "when": "kb-macro.recording && !editorFocus"
            },
            {
                "key": "ctrl+f5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "debug.openView"
                },
                "when": "kb-macro.recording && !debuggersAvailable"
            },
            {
                "key": "ctrl+f5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.debug.run"
                },
                "when": "kb-macro.recording && debuggersAvailable && debugState != 'initializing'"
            },
            {
                "key": "f5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "debug.openView"
                },
                "when": "kb-macro.recording && !debuggersAvailable"
            },
            {
                "key": "f5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.debug.start"
                },
                "when": "kb-macro.recording && debuggersAvailable && debugState == 'inactive'"
            },
            {
                "key": "f5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.debug.continue"
                },
                "when": "kb-macro.recording && debugState == 'stopped'"
            },
            {
                "key": "alt+oem_minus",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "decreaseSearchEditorContextLines"
                },
                "when": "kb-macro.recording && inSearchEditor"
            },
            {
                "key": "shift+f9",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.debug.action.toggleInlineBreakpoint"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "shift+f9",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "settings.action.showContextMenu"
                },
                "when": "kb-macro.recording && inSettingsEditor"
            },
            {
                "key": "shift+alt+h",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.showCallHierarchy"
                },
                "when": "kb-macro.recording && editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
            },
            {
                "key": "shift+alt+h",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.showIncomingCalls"
                },
                "when": "kb-macro.recording && callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
            },
            {
                "key": "shift+alt+h",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.showOutgoingCalls"
                },
                "when": "kb-macro.recording && callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
            },
            {
                "key": "shift+alt+h",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.showSubtypes"
                },
                "when": "kb-macro.recording && typeHierarchyVisible && typeHierarchyDirection == 'supertypes'"
            },
            {
                "key": "shift+alt+h",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "editor.showSupertypes"
                },
                "when": "kb-macro.recording && typeHierarchyVisible && typeHierarchyDirection == 'subtypes'"
            },
            {
                "key": "shift+alt+h",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "references-view.showCallHierarchy"
                },
                "when": "kb-macro.recording && editorHasCallHierarchyProvider"
            },
            {
                "key": "alt+oem_plus",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "increaseSearchEditorContextLines"
                },
                "when": "kb-macro.recording && inSearchEditor"
            },
            {
                "key": "ctrl+k ctrl+a",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "keybindings.editor.addKeybinding"
                },
                "when": "kb-macro.recording && inKeybindings && keybindingFocus"
            },
            {
                "key": "ctrl+k ctrl+e",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "keybindings.editor.defineWhenExpression"
                },
                "when": "kb-macro.recording && inKeybindings && keybindingFocus"
            },
            {
                "key": "alt+k",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "keybindings.editor.recordSearchKeys"
                },
                "when": "kb-macro.recording && inKeybindings && inKeybindingsSearch"
            },
            {
                "key": "y",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.changeToCode"
                },
                "when": "kb-macro.recording && notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
            },
            {
                "key": "m",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.changeToMarkdown"
                },
                "when": "kb-macro.recording && notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
            },
            {
                "key": "alt+delete",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.clearOutputs"
                },
                "when": "kb-macro.recording && notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
            },
            {
                "key": "ctrl+k t",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.collapseCellOutput"
                },
                "when": "kb-macro.recording && notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
            },
            {
                "key": "ctrl+k t",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.expandCellOutput"
                },
                "when": "kb-macro.recording && notebookCellListFocused && notebookCellOutputIsCollapsed"
            },
            {
                "key": "shift+alt+win+j",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.joinAbove"
                },
                "when": "kb-macro.recording && notebookEditorFocused"
            },
            {
                "key": "alt+win+j",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.joinBelow"
                },
                "when": "kb-macro.recording && notebookEditorFocused"
            },
            {
                "key": "ctrl+k ctrl+shift+oem_5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "notebook.cell.split"
                },
                "when": "kb-macro.recording && notebookCellEditable && notebookEditable && notebookEditorFocused"
            },
            {
                "key": "ctrl+k ctrl+shift+oem_5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.joinEditorInGroup"
                },
                "when": "kb-macro.recording && sideBySideEditorActive"
            },
            {
                "key": "ctrl+k ctrl+shift+oem_5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.splitEditorInGroup"
                },
                "when": "kb-macro.recording && activeEditorCanSplitInGroup"
            },
            {
                "key": "shift+alt+r",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "revealFileInOS"
                },
                "when": "kb-macro.recording && !editorFocus"
            },
            {
                "key": "ctrl+k s",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "saveAll"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+oem_1 ctrl+x",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.cancelRun"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+oem_1 ctrl+a",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.debugAll"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+oem_1 ctrl+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.debugAtCursor"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "ctrl+oem_1 ctrl+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.debugCurrentFile"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "ctrl+oem_1 ctrl+e",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.debugFailTests"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+oem_1 ctrl+l",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.debugLastRun"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+oem_1 m",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.openOutputPeek"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+oem_1 e",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.reRunFailTests"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+oem_1 l",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.reRunLastRun"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+oem_1 a",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.runAll"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+oem_1 c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.runAtCursor"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "ctrl+oem_1 f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.runCurrentFile"
                },
                "when": "kb-macro.recording && editorTextFocus"
            },
            {
                "key": "ctrl+oem_1 ctrl+o",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.showMostRecentOutput"
                },
                "when": "kb-macro.recording && testing.hasAnyResults"
            },
            {
                "key": "ctrl+oem_1 ctrl+i",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "testing.toggleInlineTestOutput"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+alt+win+n",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "welcome.showNewFileEntries"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+w",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.closeActiveEditor"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+w",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.closeGroup"
                },
                "when": "kb-macro.recording && activeEditorGroupEmpty && multipleEditorGroups"
            },
            {
                "key": "ctrl+w",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.killEditor"
                },
                "when": "kb-macro.recording && terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
            },
            {
                "key": "ctrl+f4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.closeActiveEditor"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+f4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.closeGroup"
                },
                "when": "kb-macro.recording && activeEditorGroupEmpty && multipleEditorGroups"
            },
            {
                "key": "ctrl+f4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.killEditor"
                },
                "when": "kb-macro.recording && terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
            },
            {
                "key": "ctrl+k ctrl+w",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.closeAllEditors"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k ctrl+shift+w",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.closeAllGroups"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k w",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.closeEditorsInGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.closeFolder"
                },
                "when": "kb-macro.recording && emptyWorkspaceSupport && workbenchState != 'empty'"
            },
            {
                "key": "ctrl+k u",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.closeUnmodifiedEditors"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+w",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.closeWindow"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+f4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.closeWindow"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "shift+f5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.debug.disconnect"
                },
                "when": "kb-macro.recording && focusedSessionIsAttach && inDebugMode"
            },
            {
                "key": "shift+f5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.debug.stop"
                },
                "when": "kb-macro.recording && inDebugMode && !focusedSessionIsAttach"
            },
            {
                "key": "ctrl+shift+f5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.debug.restart"
                },
                "when": "kb-macro.recording && inDebugMode"
            },
            {
                "key": "shift+f11",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.debug.stepOut"
                },
                "when": "kb-macro.recording && debugState == 'stopped'"
            },
            {
                "key": "f10",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.debug.stepOver"
                },
                "when": "kb-macro.recording && debugState == 'stopped'"
            },
            {
                "key": "f10",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "extension.node-debug.startWithStopOnEntry"
                },
                "when": "kb-macro.recording && !inDebugMode && debugConfigurationType == 'node' || kb-macro.recording && !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || kb-macro.recording && !inDebugMode && debugConfigurationType == 'pwa-node'"
            },
            {
                "key": "ctrl+k m",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.editor.changeLanguageMode"
                },
                "when": "kb-macro.recording && !notebookEditorFocused"
            },
            {
                "key": "ctrl+k p",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.files.copyPathOfActiveFile"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+n",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.files.newUntitledFile"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+o",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.files.openFile"
                },
                "when": "kb-macro.recording && true"
            },
            {
                "key": "ctrl+o",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.files.openFileFolder"
                },
                "when": "kb-macro.recording && isMacNative && openFolderWorkspaceSupport"
            },
            {
                "key": "ctrl+o",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.files.openLocalFile"
                },
                "when": "kb-macro.recording && remoteFileDialogVisible"
            },
            {
                "key": "ctrl+k ctrl+o",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.files.openFolder"
                },
                "when": "kb-macro.recording && openFolderWorkspaceSupport"
            },
            {
                "key": "ctrl+k ctrl+o",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.files.openLocalFolder"
                },
                "when": "kb-macro.recording && remoteFileDialogVisible"
            },
            {
                "key": "ctrl+k r",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.files.revealActiveFileInWindows"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+s",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.files.save"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+s",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.files.saveAs"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+s",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.files.saveLocalFile"
                },
                "when": "kb-macro.recording && remoteFileDialogVisible"
            },
            {
                "key": "ctrl+k ctrl+shift+s",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.files.saveWithoutFormatting"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k o",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.files.showOpenedFileInNewWindow"
                },
                "when": "kb-macro.recording && emptyWorkspaceSupport"
            },
            {
                "key": "ctrl+shift+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.findInFiles"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.view.search"
                },
                "when": "kb-macro.recording && workbench.view.search.active && neverMatch =~ /doesNotMatch/"
            },
            {
                "key": "ctrl+shift+f",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.searchWorkspace"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported && terminalTextSelected"
            },
            {
                "key": "ctrl+k ctrl+up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.focusAboveGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k ctrl+down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.focusBelowGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+8",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.focusEighthEditorGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.focusFifthEditorGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+1",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.focusFirstEditorGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.focusFourthEditorGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k ctrl+left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.focusLeftGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "f6",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.focusNextPart"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "f6",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.debug.pause"
                },
                "when": "kb-macro.recording && debugState == 'running'"
            },
            {
                "key": "shift+f6",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.focusPreviousPart"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k ctrl+right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.focusRightGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+2",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.focusSecondEditorGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+7",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.focusSeventhEditorGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+0",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.focusSideBar"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+6",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.focusSixthEditorGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+3",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.focusThirdEditorGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+g",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.gotoLine"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+o",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.gotoSymbol"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.keepEditor"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k ctrl+r",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.keybindingsReference"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k ctrl+r",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "git.revertSelectedRanges"
                },
                "when": "kb-macro.recording && isInDiffEditor"
            },
            {
                "key": "ctrl+9",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.lastEditorInGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+0",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.lastEditorInGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.moveActiveEditorGroupDown"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k down",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "views.moveViewDown"
                },
                "when": "kb-macro.recording && focusedView != ''"
            },
            {
                "key": "ctrl+k left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.moveActiveEditorGroupLeft"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "views.moveViewLeft"
                },
                "when": "kb-macro.recording && focusedView != ''"
            },
            {
                "key": "ctrl+k right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.moveActiveEditorGroupRight"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "views.moveViewRight"
                },
                "when": "kb-macro.recording && focusedView != ''"
            },
            {
                "key": "ctrl+k up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.moveActiveEditorGroupUp"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k up",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "views.moveViewUp"
                },
                "when": "kb-macro.recording && focusedView != ''"
            },
            {
                "key": "ctrl+shift+pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.moveEditorLeftInGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.moveEditorRightInGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "shift+alt+1",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.moveEditorToFirstGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "shift+alt+9",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.moveEditorToLastGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+alt+right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.moveEditorToNextGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+alt+left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.moveEditorToPreviousGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.navigateBack"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.focusPreviousPane"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "alt+left",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickInputBack"
                },
                "when": "kb-macro.recording && inQuickOpen"
            },
            {
                "key": "alt+right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.navigateForward"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+right",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.focusNextPane"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "ctrl+k ctrl+q",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.navigateToLastEditLocation"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+n",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.newWindow"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k ctrl+pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.nextEditorInGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+1",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.openEditorAtIndex1"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+2",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.openEditorAtIndex2"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+3",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.openEditorAtIndex3"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+4",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.openEditorAtIndex4"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.openEditorAtIndex5"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+6",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.openEditorAtIndex6"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+7",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.openEditorAtIndex7"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+8",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.openEditorAtIndex8"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "alt+9",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.openEditorAtIndex9"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k ctrl+s",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.openGlobalKeybindings"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+r",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.openRecent"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+r",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker"
                },
                "when": "kb-macro.recording && inQuickOpen && inRecentFilesPicker"
            },
            {
                "key": "ctrl+r",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.reloadWindow"
                },
                "when": "kb-macro.recording && isDevelopment"
            },
            {
                "key": "ctrl+oem_comma",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.openSettings"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+u",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.output.toggleOutput"
                },
                "when": "kb-macro.recording && workbench.panel.output.active"
            },
            {
                "key": "ctrl+k shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.pinEditor"
                },
                "when": "kb-macro.recording && !activeEditorIsPinned"
            },
            {
                "key": "ctrl+k shift+enter",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.unpinEditor"
                },
                "when": "kb-macro.recording && activeEditorIsPinned"
            },
            {
                "key": "ctrl+k ctrl+pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.previousEditorInGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+e",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickOpen"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+e",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickOpenNavigateNextInFilePicker"
                },
                "when": "kb-macro.recording && inFilesPicker && inQuickOpen"
            },
            {
                "key": "ctrl+p",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickOpen"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+p",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickOpenNavigateNextInFilePicker"
                },
                "when": "kb-macro.recording && inFilesPicker && inQuickOpen"
            },
            {
                "key": "ctrl+shift+tab",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+tab",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker"
                },
                "when": "kb-macro.recording && inEditorsPicker && inQuickOpen"
            },
            {
                "key": "ctrl+tab",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+tab",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickOpenNavigateNextInEditorPicker"
                },
                "when": "kb-macro.recording && inEditorsPicker && inQuickOpen"
            },
            {
                "key": "ctrl+q",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickOpenView"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+q",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickOpenNavigateNextInViewPicker"
                },
                "when": "kb-macro.recording && inQuickOpen && inViewsPicker"
            },
            {
                "key": "ctrl+shift+t",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.reopenClosedEditor"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+h",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.replaceInFiles"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+j",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.search.toggleQueryDetails"
                },
                "when": "kb-macro.recording && inSearchEditor || kb-macro.recording && searchViewletFocus"
            },
            {
                "key": "ctrl+k ctrl+t",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.selectTheme"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k ctrl+p",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.showAllEditors"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+t",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.showAllSymbols"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "f1",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.showCommands"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+p",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.showCommands"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+p",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker"
                },
                "when": "kb-macro.recording && inFilesPicker && inQuickOpen"
            },
            {
                "key": "ctrl+oem_5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.splitEditor"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k ctrl+oem_5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.splitEditorOrthogonal"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+b",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.tasks.build"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.copySelection"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported && terminalTextSelected"
            },
            {
                "key": "ctrl+shift+c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.openNativeConsole"
                },
                "when": "kb-macro.recording && !terminalFocus"
            },
            {
                "key": "ctrl+shift+oem_3",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.new"
                },
                "when": "kb-macro.recording && terminalProcessSupported"
            },
            {
                "key": "ctrl+alt+pagedown",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.scrollDown"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
            },
            {
                "key": "ctrl+alt+pageup",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.scrollUp"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
            },
            {
                "key": "ctrl+shift+5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.split"
                },
                "when": "kb-macro.recording && terminalFocus && terminalProcessSupported"
            },
            {
                "key": "ctrl+shift+5",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.splitInstance"
                },
                "when": "kb-macro.recording && terminalProcessSupported && terminalTabsFocus"
            },
            {
                "key": "ctrl+oem_3",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.terminal.toggleTerminal"
                },
                "when": "kb-macro.recording && terminal.active"
            },
            {
                "key": "shift+alt+0",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.toggleEditorGroupLayout"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "f11",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.toggleFullScreen"
                },
                "when": "kb-macro.recording && !isIOS"
            },
            {
                "key": "f11",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.debug.stepInto"
                },
                "when": "kb-macro.recording && debugState != 'inactive'"
            },
            {
                "key": "f11",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "extension.node-debug.startWithStopOnEntry"
                },
                "when": "kb-macro.recording && !inDebugMode && debugConfigurationType == 'node' || kb-macro.recording && !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || kb-macro.recording && !inDebugMode && debugConfigurationType == 'pwa-node'"
            },
            {
                "key": "ctrl+j",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.togglePanel"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+b",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.toggleSidebarVisibility"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k z",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.toggleZenMode"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+numpad_add",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.zoomIn"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+oem_plus",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.zoomIn"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+oem_plus",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.zoomIn"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+numpad_subtract",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.zoomOut"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+oem_minus",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.zoomOut"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+oem_minus",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.zoomOut"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+numpad0",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.zoomReset"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+shift+m",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.actions.view.problems"
                },
                "when": "kb-macro.recording && workbench.panel.markers.view.active"
            },
            {
                "key": "ctrl+shift+y",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.debug.action.toggleRepl"
                },
                "when": "kb-macro.recording && workbench.panel.repl.view.active"
            },
            {
                "key": "ctrl+k c",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.files.action.compareWithClipboard"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k d",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.files.action.compareWithSaved"
                },
                "when": "kb-macro.recording"
            },
            {
                "key": "ctrl+k e",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.files.action.focusOpenEditorsView"
                },
                "when": "kb-macro.recording && workbench.explorer.openEditorsView.active"
            },
            {
                "key": "ctrl+shift+d",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.view.debug"
                },
                "when": "kb-macro.recording && viewContainer.workbench.view.debug.enabled"
            },
            {
                "key": "ctrl+shift+e",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.view.explorer"
                },
                "when": "kb-macro.recording && viewContainer.workbench.view.explorer.enabled"
            },
            {
                "key": "ctrl+shift+e",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker"
                },
                "when": "kb-macro.recording && inFilesPicker && inQuickOpen"
            },
            {
                "key": "ctrl+shift+x",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.view.extensions"
                },
                "when": "kb-macro.recording && viewContainer.workbench.view.extensions.enabled"
            },
            {
                "key": "ctrl+shift+g",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.view.scm"
                },
                "when": "kb-macro.recording && workbench.scm.active"
            },
            {
                "key": "ctrl+shift+q",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.quickOpenNavigatePreviousInViewPicker"
                },
                "when": "kb-macro.recording && inQuickOpen && inViewsPicker"
            },
            {
                "key": "ctrl+shift+i",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "workbench.action.toggleDevTools"
                },
                "when": "kb-macro.recording && isDevelopment"
            },
            {
                "key": "ctrl+k ctrl+alt+s",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "git.stageSelectedRanges"
                },
                "when": "kb-macro.recording && isInDiffEditor"
            },
            {
                "key": "shift+alt+f12",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "references-view.findReferences"
                },
                "when": "kb-macro.recording && editorHasReferenceProvider"
            },
            {
                "key": "ctrl+k ctrl+n",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "git.unstageSelectedRanges"
                },
                "when": "kb-macro.recording && isInDiffEditor"
            },
            {
                "key": "ctrl+k v",
                "command": "kb-macro.wrap",
                "args": {
                    "command": "markdown.showPreviewToSide"
                },
                "when": "kb-macro.recording && !notebookEditorFocused && editorLangId == 'markdown'"
            },
            {
                "key": "ctrl+alt+r",
                "command": "kb-macro.startRecording",
                "when": "!kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option1'"
            },
            {
                "key": "ctrl+alt+r",
                "command": "kb-macro.finishRecording",
                "when": "kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option1'"
            },
            {
                "key": "ctrl+alt+p",
                "command": "kb-macro.playback",
                "when": "!kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option1'"
            },
            {
                "key": "ctrl+alt+p",
                "command": "kb-macro.cancelRecording",
                "when": "kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option1'"
            },
            {
                "key": "ctrl+shift+alt+r",
                "command": "kb-macro.startRecording",
                "when": "!kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option2'"
            },
            {
                "key": "ctrl+shift+alt+r",
                "command": "kb-macro.finishRecording",
                "when": "kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option2'"
            },
            {
                "key": "ctrl+shift+alt+p",
                "command": "kb-macro.playback",
                "when": "!kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option2'"
            },
            {
                "key": "ctrl+shift+alt+p",
                "command": "kb-macro.cancelRecording",
                "when": "kb-macro.recording && config.keyboardMacro.recordingShortcuts == 'Option2'"
            }
        ]
    }
}

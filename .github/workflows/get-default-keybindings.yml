# This workflow will retrieve the default keybindings JSON of latest stable version of VS Code across different OSs

name: Update Default Keybindings

on:
  schedule:
    # weekly
    - cron: '38 16 * * 5'
  workflow_dispatch:

jobs:
  get-default-keybindings:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [16.x]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - name: Run get-default-keybindings (Linux)
      run: xvfb-run -a npm run get-default-keybindings
      if: runner.os == 'Linux'
    - name: Run get-default-keybindings (macOS)
      run: |
        node generator/_patch_for_ci_on_macos.js
        npm run get-default-keybindings
      if: runner.os == 'macOS'
    - name: Run get-default-keybindings (Windows)
      run: npm run get-default-keybindings
      if: runner.os == 'Windows'
    - name: Upload the output file
      uses: actions/upload-artifact@v3
      with:
        name: default-keybindings-${{ matrix.os }}
        path: default-keybindings-*.json

  check-for-diff:
    needs: get-default-keybindings

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download three JSON files
        uses: actions/download-artifact@v2
      - name: Copy JSON files
        shell: bash
        run: |
          cp default-keybindings-ubuntu-latest/default-keybindings-linux.json generator/
          cp default-keybindings-macos-latest/default-keybindings-mac.json generator/
          cp default-keybindings-windows-latest/default-keybindings-win.json generator/
      - name: Generate wrapper
        run: npm run gen-wrapper
      - name: Check for the diff
        id: diff
        shell: bash
        run: |
          if git diff --exit-code; then
            echo "::set-output name=has-diff::false"
            echo "No diff found"
            echo "### No diff found :+1:" >> $GITHUB_STEP_SUMMARY
          else
            echo "::set-output name=has-diff::true"
          fi
      - name: Extract version numbers
        id: ver
        shell: bash
        run: |
          ver_linux=$(head -n 1 generator/default-keybindings-linux.json | sed -E "s/.*(([0-9]+\.){2}[0-9]+).*/\1/")
          ver_macos=$(head -n 1 generator/default-keybindings-mac.json | sed -E "s/.*(([0-9]+\.){2}[0-9]+).*/\1/")
          ver_windows=$(head -n 1 generator/default-keybindings-win.json | sed -E "s/.*(([0-9]+\.){2}[0-9]+).*/\1/")
          echo "ver_linux: ${ver_linux}"
          echo "ver_macos: ${ver_macos}"
          echo "ver_windows: ${ver_windows}"
          echo "::set-output name=linux::${ver_linux}"
          echo "::set-output name=macos::${ver_macos}"
          echo "::set-output name=windows::${ver_windows}"
          echo "Versions:" >> $GITHUB_STEP_SUMMARY
          echo "- VS Code for Linux: ${ver_linux}" >> $GITHUB_STEP_SUMMARY
          echo "- VS Code for macOS: ${ver_macos}" >> $GITHUB_STEP_SUMMARY
          echo "- VS Code for Windows: ${ver_windows}" >> $GITHUB_STEP_SUMMARY
      - name: Make a unique branch name
        id: branch-name
        shell: bash
        run: |
          datetime=$(date +'%Y-%m-%d-%H-%M')
          echo "::set-output name=branch-name::update-default-keybinding-${datetime}"
      - name: Make a commit and push a branch
        if: steps.diff.outputs.has-diff == 'true'
        shell: bash
        run: |
          echo "Has diff!"
          git checkout -b ${{ steps.branch-name.outputs.branch-name }}
          git config user.name "gh-workflow"
          git config user.email "tshino.ssr+gh-workflow@gmail.com"
          git add generator package.json
          version=${{ steps.ver.outputs.linux }}
          git commit -m "Update for VSCode ${version}"
          echo "Made a commit successfully"
          git push origin ${{ steps.branch-name.outputs.branch-name }}
          echo "Pushed a branch successfully"
      - name: Make a PR
        if: steps.diff.outputs.has-diff == 'true'
        shell: bash
        run: |
          head=${{ steps.branch-name.outputs.branch-name }}
          version=${{ steps.ver.outputs.linux }}
          title="Update wrappers based on VS Code ${version}"
          body="This pull request has been generated by the automated workflow [Update Default Keybindings](https://github.com/tshino/vscode-kb-macro/actions/workflows/get-default-keybindings.yml)."
          gh pr create --base main --head ${head} --title "${title}" --body "${body}"
          echo "### Created a PR :rocket:" >> $GITHUB_STEP_SUMMARY
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
